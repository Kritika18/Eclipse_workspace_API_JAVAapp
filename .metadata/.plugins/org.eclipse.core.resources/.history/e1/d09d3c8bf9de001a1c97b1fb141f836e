/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package parking_lot;
import java.awt.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Scanner;

import parking_lot.model.SaveCarData;
import parking_lot.payment.Car;
import parking_lot.payment.Payment; 

public class CreateParking {
	
	Integer slots;
	
	ArrayList<Integer> emptyspace =new ArrayList<>();
	
	
    
     
	 ArrayList<Integer> available = new ArrayList<>();
	public void CreatingMethod() {
        System.out.print("Enter no of slots you want for parking");
        Scanner myObj = new Scanner(System.in);  // Create a Scanner object
        

         slots = myObj.nextInt();
         available.ensureCapacity(slots);
         System.out.println("in create "+ slots);
         
         
         
        }
	
	public Integer set(Integer plate) {
		
		System.out.println(available.size());
		System.out.println(slots+"in set");
//		if(available.size()<slots)
//		{
	
		 if (emptyspace.isEmpty())
		 {
		 available.add(plate);
		 
		 }
		 else
		 {
			 int empty= emptyspace.get(0);
			 available.add(empty , plate);
		 }
		 
		
//		else
//		{
//			System.out.print("parking full");
//		}
			 

	
		  return available.indexOf(plate);
		
}
	
	
	
	public void remove(Integer empty) {
	
		
		//int emptyit = getSpot(plate);
		emptyspace.add(empty); //3 
		
		Collections.sort(emptyspace);
		System.out.print(empty +"place is empty ");
		
	}
	
	 
	
	public static void main(String args[])
	{
		CreateParking create = new CreateParking();
         create.CreatingMethod();
         SaveCarData data = new SaveCarData();
         LinkedList <Object> list = new LinkedList<>();
         ArrayList<HashMap<Integer, Long>> listOfHash = new ArrayList<HashMap<Integer, Long>>();
         
         
		int choice =1;
	  while (choice !=0)
	  {
		System.out.print("Enter 0 to terminate");
	Scanner myObj =new Scanner(System.in);
        
         choice = myObj.nextInt();
         System.out.println("Enter options" );
 		System.out.println("1. Park car ");
        System.out.println("2.Leave car");
        
         
 	
         Integer options = myObj.nextInt();
         switch(options) {
         case 1 :
            System.out.println("Lets Park car");
            System.out.println("Car no.");
            Integer plate = myObj.nextInt();
            
            //data.setPlateNo(plate);
            //list.add(plate);
            
            int spot = create.set(plate);
            data.setSpot(spot);
            
            System.out.println("Case 1" +spot);
            
            
                HashMap<String, Integer> mMap = new HashMap<String, Integer>();
                mMap.put("plate", data.setPlateNo(plate));
                mMap.put("spot", data.setspot(spot));
                //listOfHash.add(mMap);
            

           
            
            break;
         case 2 :
             System.out.println("Enter car no ");
             Integer plateno = myObj.nextInt();
             System.out.println("Enter hours ");
             Integer hours = myObj.nextInt();
            // int emptyslot = 0;
             for(Object present : list)
             {
            	
            	if(list.contains(data.getPlateNo()));
             if(data.getPlateNo()==plateno)
             {
              int emptyit = data.getSpot(plateno);
            		  System.out.println(emptyit);
            		  create.remove(emptyit);
              }
             }
             
            
            
             
             
             Payment pay = new Car();
             pay.rate(hours);
             
             break;
         default :
             System.out.println("Invalid option");
         }
         
		
		
//		Ticket ticket = new Ticket(); // calls interface
		
		
	  }
		// Leave leavecar = new Leave(); // calls interface
	
		
		
	}
}
	
